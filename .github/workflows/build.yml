# yaml-language-server: $schema=https://json.schemastore.org/github-workflow
name: build
on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:
jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.diff.outputs.images }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build matrix of changes paths
        id: diff
        run: |
          if [ "${{ github.base_ref }}" ]; then
            source=${{ github.event.pull_request.base.sha }}
          else
            source=${{ github.event.before }}
          fi
          echo "source: ${source}"
          git fetch origin ${source} --depth=1
          changes=$(git diff --name-only -z ${source} ${GITHUB_SHA} | xargs -0 -n 1 find -L . -samefile | sed 's|^\./||')
          echo files changed:
          echo "${changes}"
          case "${changes}" in
            .*) images=$(find * -mindepth 1 -maxdepth 1 | sort -u)              ;; # dotfile changes rebuild all images
             *) images=$(echo "${changes}" | grep / | cut -d/ -f 1-2 | sort -u) ;; # otherwise build affected images
          esac
          echo images affected:
          echo "${images}"
          json=$(echo "${images}" | jq -R . | jq -s -c .)
          echo "json: ${json}"
          echo "images=${json}" >> $GITHUB_OUTPUT
  lint:
    runs-on: ubuntu-latest
    needs: changes
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJSON(needs.changes.outputs.images) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Lint
        uses: jbergstroem/hadolint-gh-action@v1
        with:
          annotate: true
          dockerfile: "${{ matrix.image }}/Dockerfile"
          error_level: 2
          output_format: tty
  build:
    runs-on: ubuntu-latest
    needs:
      - changes
      - lint
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJSON(needs.changes.outputs.images) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up qemu
        uses: docker/setup-qemu-action@v3
      - name: Set up builder
        uses: docker/setup-buildx-action@v3
      - name: Build image
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.image }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
  push:
    runs-on: ubuntu-latest
    needs:
      - changes
      - build
    if: github.ref == 'refs/heads/main'
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJSON(needs.changes.outputs.images) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up qemu
        uses: docker/setup-qemu-action@v3
      - name: Set up builder
        uses: docker/setup-buildx-action@v3
      - name: Generate tag
        id: tag
        run: |
          tag=ghcr.io/ddollar/$(echo "${{ matrix.image }}" | tr / :)
          echo "tag: ${tag}"
          echo "tag=${tag}" >> $GITHUB_OUTPUT
      - name: Log in to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.image }}
          tags: ${{ steps.tag.outputs.tag }}
          platforms: linux/amd64
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
